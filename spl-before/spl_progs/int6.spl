alias physicalSP S0;
physicalSP=[PTBR+(2*SP/512)]*512+(SP%512);

alias sysCallNo S1;
sysCallNo=[physicalSP-1];

if(sysCallNo==9) then

alias fileName S2;
fileName=[physicalSP-3];

alias i S3;

i=0;
while(i<=63) do
if([FAT+8*i]==fileName) then
break;
endif;
i=i+1;
endwhile;

if(i==64) then
[physicalSP-2]=-1;
ireturn;
endif;

load(1,[FAT+8*i+2]);

i=0;
while(i<=2) do
alias k S15;
k=[PTBR+2*i+1];
alias l S14;
l=[PTBR+2*i];

if(k=="01"||k=="11") then
[MEM_LIST+l]=[MEM_LIST+l]-1;
else
if(l>=448) then
[DISK_LIST+l]=[DISK_LIST+l]-1;
store(6,20);
endif;

endif;
i=i+1;
endwhile;


i=0;
while(i<=2) do
if([SCRATCHPAD+i]!=-1) then
[PTBR+2*i]=[SCRATCHPAD+i];
[PTBR+2*i+1]="00";
else
[PTBR+2*i]=-1;
[PTBR+2*i+1]="00";
endif;
i=i+1;
endwhile;


alias pid S6;
pid=(PTBR-1024)/8;

i=0;
while(i<=7) do
if([READY_LIST+32*pid+15+2*i]!=-1) then
alias swoftIndex S13;
swoftIndex=[READY_LIST+32*pid+15+2*i];
[FILE_TABLE+2*swoftIndex+1]=[FILE_TABLE+2*swoftIndex+1]-1;
if([FILE_TABLE+2*swoftIndex+1]==0) then
[FILE_TABLE+2*swoftIndex]=-1;
[FILE_TABLE+2*swoftIndex+1]=0;
endif;
[READY_LIST+32*pid+15+2*i]=-1;
[READY_LIST+32*pid+15+2*i+1]=-1;
endif;
i=i+1;
endwhile;

SP=3*512;
physicalSP=[PTBR+(2*SP/512)]*512+(SP%512);

[physicalSP]=0;

ireturn;

endif;

if(sysCallNo==11) then
alias pid S2;
pid=(PTBR-1024)/8;

[physicalSP-2]=pid;

ireturn;

endif;

if(sysCallNo==12) then
alias pid S2;
pid=(PTBR-1024)/8;

alias parentPID S3;
parentPID=[READY_LIST+32*pid+31];

[physicalSP-2]=parentPID;

ireturn;

endif;
