alias physicalSP S0;
physicalSP=[PTBR+(2*SP/512)]*512+(SP%512);

alias sysCallNo S1;
sysCallNo=[physicalSP-1];

if(sysCallNo==8) then
alias i S2;
i=0;

while(i<=31) do
if([READY_LIST+32*i+1]==0) then
break;
endif;
i=i+1;
endwhile;

if(i==32) then
[physicalSP-2]=-1;
ireturn;
endif;

alias childPID S3;
childPID=i;

[READY_LIST+32*childPID]=i;

i=25;
while(i<=63) do
if([MEM_LIST+i]==0) then
break;
endif;
i=i+1;
endwhile;

if(i==64) then

alias scan S10;
scan=1024;

while(1) do
if(scan==1280) then
scan=1024;
endif;
if([scan+1]=="00") then
scan=scan+2;
else
if(scan%8==6) then
scan=scan+2;
else
if([MEM_LIST+[scan]]>1) then
scan=scan+2;
else
if([scan+1]=="01") then
break;
endif;
if([scan+1]=="11") then
[scan+1]="01";
scan=scan+2;
endif;
endif;
endif;
endif;
endwhile;

alias j S11;
j=448;

while(j<=511) do
if([DISK_LIST+j]==0) then
break;
endif;
j=j+1;
endwhile;

i=[scan];

store(i,j);

[DISK_LIST+j]=1;

[scan]=j;
[scan+1]="00";

store(6,20);

endif;

[MEM_LIST+i]=1;

alias stackpage S4;
stackpage=[PTBR+6];

alias j S5;
j=0;

while(j<=511) do
[i*512+j]=[stackpage*512+j];
j=j+1;
endwhile;


alias childPTBR S6;
childPTBR=1024+8*childPID;

[childPTBR+6]=i;
[childPTBR+7]="01";

j=0;
while(j<=5) do
[childPTBR+j]=[PTBR+j];
j=j+1;
endwhile;

j=0;
while(j<=2) do
alias k S15;
k=[childPTBR+2*j+1];
alias l S14;
l=[childPTBR+2*j];

if(k=="01"||k=="11") then
[MEM_LIST+l]=[MEM_LIST+l]+1;
else
if(l>=448) then
[DISK_LIST+l]=[DISK_LIST+l]+1;
store(6,20);
endif;

endif;
j=j+1;
endwhile;

[READY_LIST+32*childPID+5]=childPTBR;

[READY_LIST+32*childPID+4]=[physicalSP];

[READY_LIST+32*childPID+3]=SP-1;

[READY_LIST+32*childPID+2]=BP;

[READY_LIST+32*childPID+6]=PTLR;

[READY_LIST+32*childPID+7]=R0;

[READY_LIST+32*childPID+8]=R1;

[READY_LIST+32*childPID+9]=R2;

[READY_LIST+32*childPID+10]=R3;

[READY_LIST+32*childPID+11]=R4;

[READY_LIST+32*childPID+12]=R5;

[READY_LIST+32*childPID+13]=R6;

[READY_LIST+32*childPID+14]=R7;

alias parentPID S7;
parentPID=(PTBR-1024)/8;

[READY_LIST+32*childPID+31]=parentPID;


alias childPPOFT S13;
childPPOFT=READY_LIST+32*childPID+15;

alias parentPPOFT S12;
parentPPOFT=READY_LIST+32*parentPID+15;

i=0;
while(i<=7) do
[childPPOFT+2*i]=[parentPPOFT+2*i];
[childPPOFT+2*i+1]=[parentPPOFT+2*i+1];
if([parentPPOFT+2*i]!=-1) then
[FILE_TABLE+2*[parentPPOFT+2*i]+1]=[FILE_TABLE+2*[parentPPOFT+2*i]+1]+1;
endif;
i=i+1;
endwhile;

[READY_LIST+32*childPID+1]=1;

[physicalSP-2]=childPID;

alias childSP S8;
childSP=SP-1;

alias childPhySP S9;
childPhySP=[childPTBR+2*(childSP/512)]*512+(childSP%512);

[childPhySP-1]=-2;

ireturn;
endif;
